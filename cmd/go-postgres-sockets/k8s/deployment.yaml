apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-postgres-sockets
  namespace: go-postgres-sockets-gke-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-postgres-sockets
  template:    
    metadata:
      labels:
        app: go-postgres-sockets
      namespace: go-postgres-sockets-gke-ns
    spec:  
      serviceAccountName: go-postgres-sockets-gke-ksa
      containers:
      - name: go-postgres-sockets
        image: europe-west2-docker.pkg.dev/bebo-dev-sockets/go-postgres-sockets-repo/go-postgres-sockets:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: gke-secrets
              key: db-host
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: gke-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gke-secrets
              key: postgres-password
        - name: GO_POSTGRES_SOCKETS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: gke-secrets
              key: go-postgres-sockets-auth-key
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command:
          - "/cloud_sql_proxy"
          - "-instances=bebo-dev-sockets:europe-west2:postgres=tcp:5432"
        securityContext:
          runAsNonRoot: true
        resources:
          requests:
            memory: "2Gi"
            cpu:    "100m"